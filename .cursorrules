{
  "rules": [
    {
      "name": "Global Standards",
      "prompt": "Always write code that is as simple, clean, and optimized as possible. Avoid unnecessary dependencies and abstractions. Comments should always be written in English."
    },
    {
      "name": "Folder Architecture Rule",
      "prompt": "Follow this folder architecture: components related to a screen should be stored in a folder named after that screen. Example: components for the 'Profile' screen must go in components/Profile/. Keep imports clean and relative. Use the app/ directory for screens and navigation."
    },
    {
      "name": "React Native / Expo Best Practices",
      "prompt": "Write concise and lightweight React Native components using Expo. Use functional components with TypeScript, NativeWind for styling, and minimal dependencies. Optimize for performance and code clarity. Use proper typing for props and state. Comments in English only."
    },
    {
      "name": "State Management",
      "prompt": "Use React Context for global state when necessary. Keep state as local as possible. Implement proper error handling and loading states. Use TypeScript for type safety."
    },
    {
      "name": "Navigation",
      "prompt": "Use Expo Router for navigation. Keep navigation structure clean and type-safe. Implement proper deep linking and navigation guards when needed."
    },
    {
      "name": "Styling",
      "prompt": "Use NativeWind (TailwindCSS) for styling. Keep styles consistent across the app. Use theme constants for colors and spacing. Avoid inline styles unless absolutely necessary."
    },
    {
      "name": "Performance",
      "prompt": "Optimize component rendering with proper use of React.memo, useMemo, and useCallback. Implement proper list virtualization for long lists. Monitor and optimize bundle size."
    },
    {
      "name": "Testing",
      "prompt": "Write unit tests for critical business logic. Use React Native Testing Library for component testing. Implement proper error boundaries and error handling."
    }
  ]
}

